# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PJj1Tlti5mh35uIIMiPJoU-paoYj4hFU
"""

import streamlit as st
import pickle
import sklearn.feature_extraction.text import TfidVectorizer

# load Saved Vectorizor and  naive bayes model
tfidf=pickle.load(open('vectorizer.pkl','rb'))
model=pickle.load(open('model.pkl','rb'))

#transform text function using text preprocessing
import nltk
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer
import string

nltk.download('stopwords')

ps= PorterStemmer()

def transform_text(text):

    text=text.lower()
    text=nltk.word_tokenize(text)

    text=[word for word in text if word.isalnum()]

    text=[word for word in text if word not in stopword.word('english') and word not in string.punctuation]

    text=[ps.stem(word) for word in text]

    return " ".join(text)

#saving streamlit code
st.title("SMS Spam Classifier")
input_sms=st.text_area("Enter Message")

if st.button("Predict"):
    #preprocess
    transformed_sms=transform_text(input_sms)
    #vectorize
    vector_input=tfidf.transform([transformed_sms])
    #predict
    result=model.predict(vector_input)[0]
    #display
    if result==1:
        st.header("Spam")
    else:
        st.header("Not Spam")